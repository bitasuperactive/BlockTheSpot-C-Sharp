<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>